---
date: 2016-04-25T00:00:00Z
title: 'Making the Switch Away from Icon Fonts to SVG: Converting Font Icons to SVG'
subtitle: ""
---

<p class="size-2x">
	If you’re reading this article, then I can probably assume you’ve already decided to switch from using fonts for icons to an SVG icon system. Or maybe you're pondering the idea and want to get an overview of how that would be done and whether or not it's worth it. Either way, this post is here to help you with that.
</p>

If you're not already convinced as to why SVG is a better icon system, then I highly recommend reading [this article](https://css-tricks.com/icon-fonts-vs-svg/)—a cagematch-style comparison between icon fonts and inline SVG for icon systems. Many companies and organizations including Github have already made the switch to SVG, and have written great articles explaining why they found SVG to be a better alternative. I've listed some articles at the end of this post for further reading.

## Making the Switch 

### 1. Grab your icon fonts files.

Font icons are font glyphs. They're part of a web font and are thus defined in web font files and formats.

I don't usually use icon fonts, so for the sake of demonstration, I headed to [Fontello.com](http://fontello.com/)—an online icon font generator—to create an icon font that I can work with for this blog post. I picked a few icons and then generated an icon font and downloaded it.

<img src="../../images/fontello-icons.gif">

Fontello generates a folder containing a demo page showing you how to display the icons on your own page and what class names to use.

<figure>
	<img src="../../images/fontello-files.png">
	<figcaption>The files generated by Fontello.</figcaption>
</figure>

Among the generated files is the actual font used to define the icons. The font files are available inside a `font` folder. 

<figure>
	<img src="../../images/fontello-fonts.png">
	<figcaption>The font file formats generated by Fontello.</figcaption>
</figure>

These are the files you need to proceed. We're going to be using these files to “extract” the icons and convert them to SVG.


### 2. Choose your tool.

To convert the icons to SVG, we can use one of the following tools:

- __[fontello-svg](https://github.com/bpierre/fontello-svg)__: “a command-line tool to generate the SVG versions of a Fontello icon set, with a corresponding CSS file.”
- __[font-blast](https://www.npmjs.com/package/font-blast)__: “You can use font-blast to extract icons from any icon font - Font Awesome, Foundation, anything from Fontello etc.”
- __[Icomoon app](https://icomoon.io/app/)__: a web app for generating and creating icon sets in both SVG and icon font formats. 

I’m sure there might be more tools to do this, but these are the ones I know about.

I'm going to be using __Icomoon__ and __font-blast__ in this article because they're general tools that can be used with any font and are not restricted to just one. Both __fontello-svg__ and __font-blast__ are used pretty much the same way, and you can find extra information about __fontello-svg__ in the Github repository’s Readme.

### 3. Convert the font icons to SVG icons.

#### 3.1. Using Icomoon

To convert the font icons to SVG icons using Icomoon, we first need to upload them.

<img src="../../images/icomoon-upload.gif">

Your font icons will be available as an icon set in the app. The next steps are the same steps you would take if you were choosing from the set of already-available icons on the page:

- Select the icons you want to download as SVG.
- Click the __*Generate SVG &amp; More*__ button.

<img src="../../images/icomoon-download.gif">

Like Fontello, Icomoon generates a folder containing the icons you generated, along with a demo page showing you how they can be used on your own pages.

<img src="../../images/icomoon-files.png">

The icons you’ve converted to SVG are available in the __*SVG*__ folder.

<img src="../../images/icomoon-svg-icons.png">

There is one SVG file for every icon. The set is ready to be embedded in your page. 

But before embedding the icons, you might want to sprite them. That is, create one SVG sprite that contains all of the icons, and then use that sprite to display each icon at a time, wherever needed on the page. Icomoon conveniently generates an SVG sprite (_<strong>symbol-defs.svg</strong>_) for you along with a polyfill (_<strong>svgxuse.js</strong>_) for older browsers that don't support external sprite references. 

#### 3.2. Using font-blast

To convert the font icons to SVG icons using __font-blast__ you need to first install font-blast using npm via your terminal. 

<pre class="brush:js">
$ npm install font-blast -g
</pre>

The `-g` flag (short for `global`) ensures that you can run the script anywhere on your computer, regardless of the installation root.

As mentioned in the font-blast documentation, “You can generate icons from the command line by called the script with two parameters: the SVG file of the font, and the directory where inidivual icons should be placed”:

<pre class="brush:js">
$ font-blast [svg-font-file] [destination-dir]
</pre>

My command looked like this:

<pre class="brush:js">
font-blast /Users/Sara/Downloads/fontello-08cdd41f/font/fontello.svg  /Users/Sara/Downloads/fontello-08cdd41f/svg-icons
</pre>

<small>Tip: You can drag your folder into the terminal, which will sort of drop the path to that folder into the terminal, so you don't have to manually write it or grab it and then copy-paste it.</small>

Running the above command, font-blast retrieves the icons from the font files and creates an SVG icon for each one, and saves the result to the folder you specify in the command line. My terminal then looks like this:

<figure>
	<img src="../../images/font-blast-command-result.png">
	<figcaption>The result of running the font-blast command in the terminal, letting us know how many icons were found and converted to SVG.</figcaption>
</figure>

The <strong>*svg-icons*</strong> folder I chose for the generated files looks like this:

<figure>
	<img src="../../images/font-blast-files.png">
	<figcaption>The files generated by font-blast show the source font file used to extract the icons and include a folder containing the generated SVG icons.</figcaption>
</figure>

As you have guessed, the <strong><em>SVG</em></strong> folder contains the generated SVG icons:

<figure>
	<img src="../../images/font-blast-svg-icons.png">
	<figcaption>The font-blast-generated SVG icons.</figcaption>
</figure>

The icons are then ready to be embedded on your page.


### 4. Sprite, Embed, Style, Animate, Have fun!

There are <strong>three</strong> main ways to create and use SVG sprites. I wrote an overview of these techniques [here](https://24ways.org/2014/an-overview-of-svg-sprite-creation-techniques/). We will explore each of these techniques in more detail in an upcoming article (or a series of articles), show the pros and cons of each one, and how to create and use the SVG sprites, so stay tuned.

<p><small>You can <a href="https://sarasoueidan.com/rss.xml">subscribe to the RSS feed</a> of my blog to stay up-to-date with new articles. An e-mail newsletter is in the works too!</small></p>

### Recommended Reading:

- [Inline SVG vs Icon Fonts [CAGEMATCH]](https://css-tricks.com/icon-fonts-vs-svg/) — a <strong>must-read</strong> that clearly highlights the advantages of SVG and why it’s a superior icon system format.
- [Seriously, Don’t Use Icon Fonts](http://blog.cloudfour.com/seriously-dont-use-icon-fonts/)
- [Seriously, Use Icon Fonts](https://benfrain.com/seriously-use-icon-fonts/) — I still recommend using SVG for icon systems, but it’s always good to read a different point of view. 
- [Delivering Octicons with SVG](https://github.com/blog/2112-delivering-octicons-with-svg) on the Github blog
- [Ten reasons we switched from an icon font to SVG](http://ianfeather.co.uk/ten-reasons-we-switched-from-an-icon-font-to-svg/)